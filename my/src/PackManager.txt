// src/features/pack-management/PackManager.tsx
import React from 'react';
import { usePackData } from './hooks/usePackData';
import type { Pack } from '../../models/pack';
import { Link } from '@tanstack/react-router'; // Linkの使用はPackPageではなく、リストの遷移ボタンで利用

interface PackManagerProps {
    initialPackId?: string;
}

const PackManager: React.FC<PackManagerProps> = ({ initialPackId }) => {
    // 💡 責務を切り出したHookからすべての状態とロジックを取得
    const { 
        packs, 
        currentPack, 
        setCurrentPack, 
        isLoading, 
        handleSave, 
        handleDelete, 
        handleNewPack 
    } = usePackData(initialPackId);

    if (isLoading) {
        return <div>パックデータをロード中...</div>;
    }
    
    // --- フォームイベントハンドラ ---
    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
        const { name, value } = e.target;
        if (currentPack) {
            setCurrentPack({ ...currentPack, [name]: value } as Pack);
        }
    };

    // --- レンダリング ---
    
    return (
        <div style={{ display: 'flex', gap: '30px', padding: '20px' }}>
            
            {/* 1. パック一覧エリア */}
            <div style={{ flex: '1', minWidth: '300px', borderRight: '1px solid #ccc', paddingRight: '30px' }}>
                <h2>📦 パック一覧 ({packs.length}件)</h2>
                <button onClick={handleNewPack} style={{ marginBottom: '15px' }}>
                    + 新規パックを作成
                </button>
                
                <ul style={{ listStyle: 'none', padding: 0 }}>
                    {packs.map(pack => (
                        <li key={pack.packId} style={{ border: pack.packId === currentPack?.packId ? '2px solid #007bff' : '1px solid #eee', padding: '10px', margin: '5px 0' }}>
                            <h4 style={{ margin: '0 0 5px 0' }}>{pack.name} ({pack.series})</h4>
                            <p style={{ margin: 0, fontSize: 'small' }}>
                                封入 {pack.cardsPerPack}枚 | 総収録 {pack.totalCards}種
                            </p>
                            <div style={{ marginTop: '5px' }}>
                                {/* setCurrentPack で状態を変更し、右側エリアの編集内容を切り替える */}
                                <button onClick={() => setCurrentPack(pack)} style={{ marginRight: '10px' }}>編集</button>
                                <button onClick={() => handleDelete(pack.packId)} style={{ color: 'red' }}>削除</button>
                                
                                {/* 💡 開封ページへの遷移（コンテキストの引き渡し） */}
                                <Link 
                                  to="/user/open" 
                                  search={{ packId: pack.packId }}
                                  style={{ marginLeft: '10px', textDecoration: 'none' }}
                                >
                                  🃏 開封
                                </Link>
                            </div>
                        </li>
                    ))}
                </ul>
            </div>
            
            {/* 2. パック編集エリア */}
            <div style={{ flex: '2' }}>
                <h2>{currentPack?.name ? `パック編集: ${currentPack.name}` : '新規パック作成'}</h2>

                {currentPack && (
                    <form onSubmit={(e) => { e.preventDefault(); handleSave(currentPack); }}>
                        <div style={{ marginBottom: '15px' }}>
                            <label style={{ display: 'block', marginBottom: '5px' }}>パック名:</label>
                            <input 
                                type="text" 
                                name="name" // name属性を追加
                                value={currentPack.name} 
                                onChange={handleInputChange}
                            />
                        </div>
                        {/* ... 他の入力フィールドも同様に name 属性と handleInputChange を使用 ... */}
                        
                        <p style={{ color: 'gray', fontSize: 'small' }}>
                            [⚠️ 封入枚数やレアリティ設定の高度なフォームUIは省略しています]
                        </p>

                        <button type="submit" style={{ padding: '10px 20px', backgroundColor: '#007bff', color: 'white' }}>
                            💾 パックを保存
                        </button>
                    </form>
                )}
            </div>
        </div>
    );
};

export default PackManager;
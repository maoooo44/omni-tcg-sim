// src/components/Navbar.tsx
import React, { useState } from 'react';
import { AppBar, Toolbar, Typography, Button, Box, IconButton, Tooltip, Menu, MenuItem } from '@mui/material';
import SettingsIcon from '@mui/icons-material/Settings';
import FileDownloadIcon from '@mui/icons-material/FileDownload';
import { Link } from '@tanstack/react-router';

// DataImportExportDialog のインポート
import DataImportExportDialog from './DataImportExportDialog'; 

// Propsの定義
interface NavbarProps {
    isDTCGEnabled: boolean;
    isGodMode: boolean;
    coins: number;
}

const Navbar: React.FC<NavbarProps> = ({ isDTCGEnabled, isGodMode, coins }) => {
    
    // DataImportExportDialog の状態
    const [isDialogOpen, setIsDialogOpen] = useState(false);
    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);

    const handleMenuOpen = (event: React.MouseEvent<HTMLElement>) => {
        setAnchorEl(event.currentTarget);
    };

    const handleMenuClose = () => {
        setAnchorEl(null);
    };

    // ✅ クラッシュ対策: (coins || 0) として、安全にtoLocaleStringを呼び出す
    const safeCoins = (coins || 0);

    const modeText = isGodMode 
        ? 'GOD MODE' 
        : isDTCGEnabled 
            ? `DTCG (¥${safeCoins.toLocaleString()})` 
            : 'FREE PLAY';
    
    const modeColor = isGodMode ? 'error.main' : isDTCGEnabled ? 'success.main' : 'text.secondary';

    return (
        <AppBar position="static" color="primary">
            <Toolbar>
                
                {/* 1. タイトル/ホームリンク */}
                <Typography variant="h6" component={Link} to="/" sx={{ flexGrow: 1, textDecoration: 'none', color: 'inherit' }}>
                    TCG Builder
                </Typography>
                
                {/* 2. モード表示 */}
                <Box sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}>
                    <Typography 
                        variant="body1" 
                        sx={{ ml: 2, fontWeight: 'bold', color: modeColor, display: 'inline-block' }}
                    >
                        {modeText}
                    </Typography>
                </Box>

                {/* 3. ナビゲーションボタン (デスクトップ向け) */}
                <Box sx={{ display: { xs: 'none', md: 'flex' } }}>
                    
                    <Button color="inherit" component={Link} to="/">HOME</Button> 

                    <Button color="inherit" component={Link} to="/data/packs">パック管理</Button> 

                    <Button color="inherit" component={Link} to="/user/open">パック開封</Button> 

                    {/* ✅ パスを /user/pool に統一 (以前のコードに合わせる) */}
                    <Button color="inherit" component={Link} to="/user/pool">カードプール</Button> 

                    <Button color="inherit" component={Link} to="/user/decks">デッキ構築</Button>
                    
                    {/* 4. ZIPインポート/エクスポートボタン */}
                    <Tooltip title="データのエクスポート">
                        <IconButton color="inherit" onClick={() => setIsDialogOpen(true)}>
                            <FileDownloadIcon />
                        </IconButton>
                    </Tooltip>
                    
                    {/* 設定画面へのリンク */}
                    <Tooltip title="設定">
                        <IconButton color="inherit" component={Link} to="/settings">
                            <SettingsIcon />
                        </IconButton>
                    </Tooltip>
                </Box>

                {/* 5. モバイル向けメニューボタン */}
                <Box sx={{ display: { xs: 'block', md: 'none' } }}>
                    <IconButton color="inherit" onClick={handleMenuOpen}>
                        <SettingsIcon />
                    </IconButton>
                    <Menu
                        anchorEl={anchorEl}
                        open={Boolean(anchorEl)}
                        onClose={handleMenuClose}
                    >
                        {/* モバイルメニュー項目 */}
                        <MenuItem onClick={handleMenuClose} component={Link} to="/">HOME</MenuItem>
                        <MenuItem onClick={handleMenuClose} component={Link} to="/data/packs">パック管理</MenuItem>
                        <MenuItem onClick={handleMenuClose} component={Link} to="/user/open">パック開封</MenuItem>
                        {/* ✅ パスを /user/pool に統一 */}
                        <MenuItem onClick={handleMenuClose} component={Link} to="/user/pool">カードプール</MenuItem>
                        <MenuItem onClick={handleMenuClose} component={Link} to="/user/decks">デッキ構築</MenuItem>
                        
                        <MenuItem onClick={() => setIsDialogOpen(true)}>
                            <FileDownloadIcon sx={{ mr: 1 }} />
                            データのインポート/エクスポート
                        </MenuItem>
                        <MenuItem onClick={handleMenuClose} component={Link} to="/settings">
                            <SettingsIcon sx={{ mr: 1 }} />
                            設定
                        </MenuItem>
                    </Menu>
                </Box>
            </Toolbar>
            
            {/* ✅ DataImportExportDialog のレンダリング */}
            <DataImportExportDialog 
                open={isDialogOpen} 
                onClose={() => setIsDialogOpen(false)} 
            />
        </AppBar>
    );
};

export default Navbar;